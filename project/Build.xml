<?xml version="1.0" encoding="utf-8"?>
<xml>

  <!-- Variables and compile flags. -->
  <set name="HXCPP_CPP11" value="1" />
  <set name="OUTPUT_DIR" value="../ndll" unless="OUTPUT_DIR" />
  <set name="DEBUGEXTRA" value="-debug" if="fulldebug" />
  <set name="LIBSUFFIX" value="${HX_TARGET_SUFFIX}" if="HX_TARGET_SUFFIX" />
  <set name="LIBSUFFIX" value="${LIBEXTRA}" unless="LIBSUFFIX" />

  <set name="ndll-tool" value="dll" unless="iphone"/>
  <set name="ndll-tool" value="static" if="iphone"/>

  <set name="LIBFFMPEG_SRC" value="../lib.src/ffmpeg" />

  <!-- Include HXCPP common build flags. -->
  <include name="${HXCPP}/build-tool/BuildCommon.xml" />

  <echo value="==========================" />
  <echo value="Building extension-ffmpeg..." />

  <section if="windows HXCPP_M32">
    <echo value="Target platform: Windows (x32)" />

    <set name="LIBFFMPEG_BUILD" value="../lib.build/Windows32" />
  </section> 

  <section if="windows HXCPP_M64">
    <echo value="Target platform: Windows (x64)" />

    <set name="LIBFFMPEG_BUILD" value="../lib.build/Windows64" />
  </section>

  <section if="linux HXCPP_M32">
    <echo value="Target platform: Linux (x32)" />
    <echo value="WARNING: Build currently disabled on this platform!" />

    <set name="LIBFFMPEG_BUILD" value="../lib.build/Linux32" />
  </section>
  
  <section if="linux HXCPP_M64">
    <echo value="Target platform: Linux (x64)" />

    <set name="LIBFFMPEG_BUILD" value="../lib.build/Linux64" />
  </section>

  <echo value="==========================" />

  <!-- extension-ffmpeg's CFFI interface code -->
  <files id="core">
    <!-- Add headers to search path. -->
    <compilerflag value="-Iinclude" />
    <compilerflag value="-I${LIBFFMPEG_SRC}" />

    <compilerflag value="-D_ISOC99_SOURCE" />
    <compilerflag value="-D_FILE_OFFSET_BITS=64" />
    <compilerflag value="-D_LARGEFILE_SOURCE" />
    <compilerflag value="-DPIC" />
    <compilerflag value="-DZLIB_CONST" />
    <compilerflag value="-DHAVE_AV_CONFIG_H" />
    <compilerflag value="-D_GNU_SOURCE=1" />
    <compilerflag value="-D_THREAD_SAFE" />

    <!-- Dependencies of CFFI. -->
    <depend name="${HXCPP}/include/hx/Macros.h" />
    <depend name="${HXCPP}/include/hx/CFFI.h" />

    <!--
      The CFFI interface source.
      Split into multiple files for organizational purposes.
      - Core.cpp: Generic important functions such as initialization.
      - Structures.cpp: Initialize data structures.
      - Version.cpp: Versioning and debug information.
    -->
    <file name="common/Core.cpp" />
    <file name="common/Error.cpp" />
    <file name="common/Format.cpp" />
    <file name="common/Structures.cpp" />
    <file name="common/Version.cpp" />
    
    <!-- NOTE: This one can't build without linking the shared library? -->
  </files>

  <!-- The target NDLL file. -->
  <target id="NDLL" output="${LIBPREFIX}extension-ffmpeg${DEBUGEXTRA}${LIBSUFFIX}" tool="linker" toolid="${STD_MODULE_LINK}">
    <outdir name="${OUTPUT_DIR}/${BINDIR}" />

    <ext value=".so" />

    <section if="windows">
      <ext value=".ndll" />

      <!-- TODO: Readd from working build.xml -->
      <flag value="-libpath:${LIBFFMPEG_BUILD}" if="windows" />
      
      <files id="core" />
    </section>

    <section if="linux">
      <ext value=".ndll" />

      <flag value="-L/usr/lib" />
      <flag value="-L${LIBFFMPEG_BUILD}" />

      <!-- TODO: Fix on x32 (add docker builder?) -->

      <lib name="-lavcodec" />
      <lib name="-lavformat" />
      <lib name="-lavutil" />

      <section if="HXCPP_M64">
        <files id="core" />
      </section>
    </section>
    
    <section if="mac">
      <!-- TODO: Resolve issues. -->
      <ext value=".ndll" />
    </section>

    <section if="android">
    </section>
  </target>

  <!-- Redirect to the NDLL target if unspecified. -->
  <target id="default">
    <target id="NDLL" />
  </target>

</xml>